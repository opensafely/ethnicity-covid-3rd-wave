----------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/lsh152058/Desktop/GitHub/ethnicity-covid-3rd-wave/logs/03a_eth_table
> 1_eth16_nocarehomes.log
  log type:  text
 opened on:   5 May 2021, 19:04:13

. 
. * Open Stata dataset
. use ./output/analysis_dataset.dta, clear

. keep if carehome==0
(11,780 observations deleted)

. safetab ethnicity_16,m 

Eth 16 categories |      Freq.     Percent        Cum.
------------------+-----------------------------------
          British |      3,183        4.75        4.75
            Irish |      3,133        4.68        9.43
      Other White |      3,155        4.71       14.14
White + Caribbean |      3,109        4.64       18.78
  White + African |      3,149        4.70       23.49
    White + Asian |      3,097        4.62       28.11
      Other mixed |      3,120        4.66       32.77
           Indian |      3,123        4.66       37.43
        Pakistani |      3,184        4.75       42.19
      Bangladeshi |      3,146        4.70       46.88
      Other Asian |      3,148        4.70       51.59
        Caribbean |      3,128        4.67       56.26
          African |      3,199        4.78       61.03
      Other Black |      3,109        4.64       65.67
          Chinese |      3,100        4.63       70.30
            Other |      3,192        4.77       75.07
          Unknown |     16,696       24.93      100.00
------------------+-----------------------------------
            Total |     66,971      100.00

. 
.  /* PROGRAMS TO AUTOMATE TABULATIONS===========================================*/ 
. 
. ********************************************************************************
. * All below code from K Baskharan 
. * Generic code to output one row of table
. 
. cap prog drop generaterow

. program define generaterow
  1. syntax, variable(varname) condition(string) 
  2.         
.         qui cou
  3.         local overalldenom=r(N)
  4.         
.         sum `variable' if `variable' `condition'
  5.         file write tablecontent (r(max)) _tab
  6.         
.         qui cou if `variable' `condition'
  7.         local rowdenom = r(N)
  8.         local colpct = 100*(r(N)/`overalldenom')
  9.         file write tablecontent %9.0gc (`rowdenom')  (" (") %3.1f (`colpct') (")") 
> _tab
 10. 
.         forvalues i=1/17{
 11.         qui cou if ethnicity_16 == `i'
 12.         local rowdenom = r(N)
 13.         qui cou if ethnicity_16 == `i' & `variable' `condition'
 14.         local pct = 100*(r(N)/`rowdenom') 
 15.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f (`pct') (")") _tab
 16.         }
 17.         
.         file write tablecontent _n
 18. end

. 
. 
. * Output one row of table for co-morbidities and meds
. 
. cap prog drop generaterow2

. program define generaterow2
  1. syntax, variable(varname) condition(string) 
  2.         
.         qui cou
  3.         local overalldenom=r(N)
  4.         
.         qui cou if `variable' `condition'
  5.         local rowdenom = r(N)
  6.         local colpct = 100*(r(N)/`overalldenom')
  7.         file write tablecontent %9.0gc (`rowdenom')  (" (") %3.1f (`colpct') (")") 
> _tab
  8. 
.         forvalues i=1/17{
  9.         qui cou if ethnicity_16 == `i'
 10.         local rowdenom = r(N)
 11.         qui cou if ethnicity_16 == `i' & `variable' `condition'
 12.         local pct = 100*(r(N)/`rowdenom') 
 13.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f (`pct') (")") _tab
 14.         }
 15.         
.         file write tablecontent _n
 16. end

. 
. 
. 
. /* Explanatory Notes 
> 
> defines a program (SAS macro/R function equivalent), generate row
> the syntax row specifies two inputs for the program: 
> 
>         a VARNAME which is your variable 
>         a CONDITION which is a string of some condition you impose 
>         
> the program counts if variable and condition and returns the counts
> column percentages are then automatically generated
> this is then written to the text file 'tablecontent' 
> the number followed by space, brackets, formatted pct, end bracket and then tab
> 
> the format %3.1f specifies length of 3, followed by 1 dp. 
> 
> */ 
. 
. ********************************************************************************
. * Generic code to output one section (varible) within table (calls above)
. 
. cap prog drop tabulatevariable

. prog define tabulatevariable
  1. syntax, variable(varname) min(real) max(real) [missing]
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4. 
.         forvalues varlevel = `min'/`max'{ 
  5.                 generaterow, variable(`variable') condition("==`varlevel'")
  6.         }
  7.         
.         if "`missing'"!="" generaterow, variable(`variable') condition("== 12")
  8.         
. 
. 
. end

. 
. ********************************************************************************
. 
. /* Explanatory Notes 
> 
> defines program tabulate variable 
> syntax is : 
> 
>         - a VARNAME which you stick in variable 
>         - a numeric minimum 
>         - a numeric maximum 
>         - optional missing option, default value is . 
> 
> forvalues lowest to highest of the variable, manually set for each var
> run the generate row program for the level of the variable 
> if there is a missing specified, then run the generate row for missing vals
> 
> */ 
. 
. ********************************************************************************
. * Generic code to qui summarize a continous variable 
. 
. cap prog drop summarizevariable 

. prog define summarizevariable
  1. syntax, variable(varname) 
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4. 
. 
.         qui summarize `variable', d
  5.         file write tablecontent ("Mean (SD)") _tab 
  6.         file write tablecontent  %3.1f (r(mean)) (" (") %3.1f (r(sd)) (")") _tab
  7.         
.         forvalues i=1/17{                                                       
  8.         qui summarize `variable' if ethnicity_16 == `i', d
  9.         file write tablecontent  %3.1f (r(mean)) (" (") %3.1f (r(sd)) (")") _tab
 10.         }
 11. 
. file write tablecontent _n
 12. 
.         
.         qui summarize `variable', d
 13.         file write tablecontent ("Median (IQR)") _tab 
 14.         file write tablecontent %3.1f (r(p50)) (" (") %3.1f (r(p25)) ("-") %3.1f (r
> (p75)) (")") _tab
 15.         
.         forvalues i=1/17{
 16.         qui summarize `variable' if ethnicity_16 == `i', d
 17.         file write tablecontent %3.1f (r(p50)) (" (") %3.1f (r(p25)) ("-") %3.1f (r
> (p75)) (")") _tab
 18.         }
 19.         
. file write tablecontent _n
 20.         
. end

. 
. /* INVOKE PROGRAMS FOR TABLE 1================================================*/ 
. 
. *Set up output file
. cap file close tablecontent

. file open tablecontent using ./output/table1_eth16.txt, write text replace

. 
. file write tablecontent ("Table 1: Demographic and Clinical Characteristics") _n

. 
. * ethnicity_16 labelled columns
. 
. local lab1: label ethnicity_16 1

. local lab2: label ethnicity_16 2

. local lab3: label ethnicity_16 3

. local lab4: label ethnicity_16 4

. local lab5: label ethnicity_16 5

. local lab6: label ethnicity_16 6

. local lab7: label ethnicity_16 7

. local lab8: label ethnicity_16 8

. local lab9: label ethnicity_16 9

. local lab10: label ethnicity_16 10

. local lab11: label ethnicity_16 11

. local lab12: label ethnicity_16 12

. local lab13: label ethnicity_16 13

. local lab14: label ethnicity_16 14

. local lab15: label ethnicity_16 15

. local lab16: label ethnicity_16 16

. local lab17: label ethnicity_16 17

. 
. 
. 
. file write tablecontent _tab ("Total")                                                
>     _tab ///
>                                                          ("`lab1'")                   
>                             _tab ///
>                                                          ("`lab2'")                   
>                             _tab ///
>                                                          ("`lab3'")                   
>                             _tab ///
>                                                          ("`lab4'")                   
>                             _tab ///
>                                                          ("`lab5'")                   
>                             _tab ///
>                                                          ("`lab6'")                   
>                             _tab ///
>                                                          ("`lab7'")                   
>                             _tab ///
>                                                          ("`lab8'")                   
>                             _tab ///
>                                                          ("`lab9'")                   
>                             _tab ///
>                                                          ("`lab10'")                  
>                             _tab ///
>                                                          ("`lab11'")                  
>                             _tab ///
>                                                          ("`lab12'")                  
>                             _tab ///
>                                                          ("`lab13'")                  
>                             _tab ///
>                                                          ("`lab14'")                  
>                             _tab ///
>                                                          ("`lab15'")                  
>                             _tab ///
>                                                          ("`lab16'")                  
>                             _tab ///
>                                                          ("`lab17'")                  
>                             _n 

.                                                          
. 
. 
. * DEMOGRAPHICS (more than one level, potentially missing) 
. 
. format hba1c_pct bmi egfr %9.2f

. 
. gen byte Denominator=1

. qui tabulatevariable, variable(Denominator) min(1) max(1) 

. file write tablecontent _n 

. 
. qui summarizevariable, variable(age) 

. file write tablecontent _n

. 
. qui tabulatevariable, variable(male) min(0) max(1) 

. file write tablecontent _n 

. 
. qui tabulatevariable, variable(imd) min(1) max(5) 

. file write tablecontent _n 

. 
. qui summarizevariable, variable(hh_size)

. file write tablecontent _n

. 
. qui tabulatevariable, variable(hh_total_cat) min(1) max(9) missing

. file write tablecontent _n 

. 
. qui tabulatevariable, variable(kids_cat3) min(0) max(2)

. file write tablecontent _n

. 
. qui summarizevariable, variable(gp_consult_count) 

. file write tablecontent _n 

. 
. qui tabulatevariable, variable(smoke_nomiss) min(1) max(3)  

. file write tablecontent _n 

. 
. qui summarizevariable, variable(bmi)

. file write tablecontent _n

. 
. qui tabulatevariable, variable(bmicat_sa) min(1) max(7) 

. file write tablecontent _n 

. 
. qui summarizevariable, variable(hba1c_pct)

. file write tablecontent _n

. 
. qui summarizevariable, variable(hba1c_mmol_per_mol)

. file write tablecontent _n

. 
. qui tabulatevariable, variable(hba1ccat) min(0) max(5)  

. file write tablecontent _n 

. 
. qui summarizevariable, variable(bp_sys) 

. file write tablecontent _n

. 
. qui summarizevariable, variable(bp_dias) 

. file write tablecontent _n

. 
. qui tabulatevariable, variable(bp_cat) min(1) max(5)  

. file write tablecontent _n 

. 
. qui tabulatevariable, variable(dm_type) min(0) max(3)  

. file write tablecontent _n 

. 
. * COMORBIDITIES (binary)
. qui summarizevariable, variable(comorbidity_count)

. file write tablecontent _n

. 
. foreach comorb of varlist               ///
>         hypertension                            ///
>         chronic_cardiac_disease         ///
>         stroke                                          ///
>         egfr60                                                  ///
>         esrf                                            ///
>         cancer                                          ///
>         ra_sle_psoriasis                        ///
>         immunosuppressed                        ///
>         chronic_liver_disease           ///
>         dementia                                        ///
>         other_neuro                                     ///
>         asthma                                          ///
>         chronic_respiratory_disease ///
>         { 
  2.         local comorb: subinstr local comorb "i." ""
  3.         local lab: variable label `comorb'
  4.         file write tablecontent ("`lab'") _tab
  5.                                                                 
.         generaterow2, variable(`comorb') condition("==1")
  6.         file write tablecontent _n _n
  7. }

. 
. ** OTHER TREATMENT VARIABLES (binary)
. foreach treat of varlist ///
>         combination_bp_meds     ///
>         statin                          ///
>         insulin                         ///
>                                                 {               
  2. 
. local lab: variable label `treat'
  3. file write tablecontent ("`lab'") _tab
  4.         
. generaterow2, variable(`treat') condition("==1")
  5. 
. file write tablecontent _n
  6. }

. 
. 
. file close tablecontent

. 
. 
. * Close log file 
. log close
      name:  <unnamed>
       log:  /Users/lsh152058/Desktop/GitHub/ethnicity-covid-3rd-wave/logs/03a_eth_table
> 1_eth16_nocarehomes.log
  log type:  text
 closed on:   5 May 2021, 19:05:27
----------------------------------------------------------------------------------------
